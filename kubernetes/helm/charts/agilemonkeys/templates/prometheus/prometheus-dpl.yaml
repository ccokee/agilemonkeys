{{/*
Generate the full prometheus image url
*/}}
{{- define "prometheus.fullpath" -}}
{{- if .Values.prometheus.image -}}
  {{- if .Values.prometheus.image.registry -}}
    {{- printf "%s" .Values.prometheus.image.registry -}}
  {{- end -}}
  {{- if .Values.prometheus.image.name -}}
    {{- printf "%s" .Values.prometheus.image.name -}}
  {{- end -}}
  {{- if .Values.prometheus.image.tag -}}
    {{- printf ":%s" .Values.prometheus.image.tag -}}
  {{- end -}}
{{- end -}}
{{- end -}}

{{/*
Generate the full alertmanager image url
*/}}
{{- define "alertmanager.fullpath" -}}
{{- if .Values.prometheus.alertmanager.image -}}
  {{- if .Values.prometheus.alertmanager.image.registry -}}
    {{- printf "%s" .Values.prometheus.alertmanager.image.registry -}}
  {{- end -}}
  {{- if .Values.prometheus.alertmanager.image.name -}}
    {{- printf "%s" .Values.prometheus.alertmanager.image.name -}}
  {{- end -}}
  {{- if .Values.prometheus.alertmanager.image.tag -}}
    {{- printf ":%s" .Values.prometheus.alertmanager.image.tag -}}
  {{- end -}}
{{- end -}}
{{- end -}}

# Prometheus deployment
---
{{- if  and  (.Values.prometheus.enabled) (.Values.prometheus.server_enabled) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: {{ template "monitoring.namespace" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
        {{- range $key, $val := .Values.prometheus.podLabels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
    spec:
      containers:
        - name: prometheus
          image: "{{ include "prometheus.fullpath" . }}"
          imagePullPolicy: {{ include "resolve.imagePullPolicy" (dict "top" . "specificPullPolicy" .Values.prometheus.pullPolicy) }}
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
          startupProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            failureThreshold: 10
            periodSeconds: 20
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            periodSeconds: 10
            failureThreshold: 5
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
{{- if  (.Values.prometheus.alertmanager.enabled)  }}
            - name: alertmanager-rules-volume
              mountPath: /alerts/
{{- end }}
{{- if .Values.prometheus.extraVolumeMounts }}
{{- toYaml .Values.prometheus.extraVolumeMounts | nindent 12 }}
{{- end }}
          resources:
            requests:
              memory: {{.Values.prometheus.memoryrequested}}
              cpu: {{.Values.prometheus.cpurequested}}
            limits:
{{- if (.Values.prometheus.memorylimit ) }}
              memory: {{ .Values.prometheus.memorylimit }}
{{- end }}
{{- if (.Values.prometheus.cpulimit ) }}
              cpu: {{ .Values.prometheus.cpulimit }}
{{- end }}
{{- if  (.Values.prometheus.alertmanager.enabled)  }}
        - name: alertmanager
          image: "{{ include "alertmanager.fullpath" . }}"
          args:
            - "--config.file=/etc/alertmanager/config.yml"
            - "--storage.path=/alertmanager"
          ports:
          - name: alertmanager
            containerPort: 9093
          volumeMounts:
            - name: alertmanager-config-volume
              mountPath: /etc/alertmanager/
{{- end }}
{{- if .Values.prometheus.extraContainers }}
{{- include "tam.templateValue" (dict "value" .Values.prometheus.extraContainers "context" $) | nindent 8 }}
{{- end }}
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
{{- if  (.Values.prometheus.alertmanager.enabled)  }}
        - name: alertmanager-rules-volume
          configMap:
            defaultMode: 420
            name: alertmanager-rules
        - name: alertmanager-config-volume
          configMap:
            defaultMode: 420
            name: alertmanager-config
{{- end }}
        - name: prometheus-storage-volume
          emptyDir: {}
{{- end }}
{{- if .Values.prometheus.extraVolumes }}
{{- toYaml .Values.prometheus.extraVolumes | nindent 8 }}
{{- end }}
---
{{- if  and  (.Values.prometheus.enabled) (.Values.prometheus.server_enabled) }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.prometheus.servicename }}
  namespace: {{ template "monitoring.namespace" . }}
  annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port:   '9090'

spec:
  selector:
    app: prometheus-server
  type: {{ .Values.prometheus.servicetype | quote }}
  {{- if and (eq .Values.prometheus.servicetype "LoadBalancer") (not (empty .Values.prometheus.loadBalancerIP)) }}
  loadBalancerIP: "{{ .Values.prometheus.loadBalancerIP }}"
  {{- end }}
  ports:
    - port: {{ .Values.prometheus.serviceport }}
      targetPort: 9090
      {{- if and (or (eq .Values.prometheus.servicetype "NodePort") (eq .Values.prometheus.servicetype "LoadBalancer")) (not (empty .Values.prometheus.nodePort)) }}
      nodePort: "{{ .Values.prometheus.nodePort }}"
      {{- end }}

{{- end }}

{{- if and (.Values.prometheus.enabled) (.Values.prometheus.alertmanager.enabled) }}
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: {{ template "monitoring.namespace" . }}
spec:
  selector:
    app: prometheus-server
  type: NodePort
  ports:
    - port: 9093
      targetPort: 9093
      nodePort: 30093
{{- end }}
