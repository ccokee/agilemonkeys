
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  prometheus:
    enabled: true
# pullPolicy: Always

monitoringNamespace: default

serviceAccount:
  enabled: false
  create: false
# name:
# imagePullSecrets:
# - name: my-secret-key


## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext:
  enabled: false
  fsGroup: 1001
  runAsUser: 1001
  readOnlyRootFilesystem: false
  enableRunAsUser: true
  dropAllCapabilities: false
  # once all capabilities are dropped, add allowed here
  # addCapabilities:
  #   - NET_BIND_SERVICE

tam_image:
  replicaCount: 1
  podLabels: {}
    # key1: value1
  serviceLabels: {}
  app: tam
  name: tam
  servicename: tam
  image:
    name: ccokee/tam
    registry: 
    tag: latest
  ports:
    containerPort: 8080
    name: 8080tcp01
# - Values needed during startup
  readinessProbe:
    failureThreshold: 2
    periodSeconds: 5
    initialDelaySeconds: 10
  livenessProbe:
    failureThreshold: 2
    periodSeconds: 5
    initialDelaySeconds: 30
  startupProbe:
    failureThreshold: 60
    periodSeconds: 10
  env_configmap_name:
  cpulimit: 3
  cpurequested: 1
  loadbalancer: false
  memorylimit: "2000Mi"
  memoryrequested: "500Mi"
  securityContext:
    runAsUser: 1001

service_tam:
  name: tam
  port: 10443
  protocol: TCP
  servicetype: NodePort
  nodePort: 10443
  targetPort: 8080
  labels: {}
    # key1: value1

prometheus:
  ## Declare this to enable/disable local prometheus
  enabled: true
  image:
    registry:
    name: prom/prometheus
    tag: v2.36.1
  server_enabled: true
  alertmanager:
    enabled: false
    image:
      registry:
      name: prom/alertmanager
      tag: v0.24.0
  podLabels: {}
    # key1: value1
  serviceLabels: {}
  pullPolicy: Always
  servicename: prometheus-service
  serviceport: 8080
  servicetype: NodePort
  grafanaservicetype: NodePort
  memoryrequested: "500Mi"
  cpurequested: "200m"
  memorylimit: "500Mi"
  cpulimit: "200m"
  scrape_interval:
  evaluation_interval:
  scrape_timeout:
  extraContainers: []
  extraVolumes: []
  # - name: example-config-volume
  #   configMap:
  #     defaultMode: 420
  #     name: example-config
  extraVolumeMounts: []
  # - name: example-volume
  #   mountPath: /example/
  customJobs: []
  # - job_name: 'example-job'
  #   metrics_path: /test
  #   scheme: http
  #   tls_config:
  #     insecure_skip_verify: true
  #   static_configs:
  #     - targets: ["{{ .Values.example }}.{{ .Release.Namespace }}.svc.cluster.local:8080"]
  grafana:
    enabled: true
    image:
      registry:
      name: grafana/grafana
      tag: 8.5.6
    memoryrequested: "100Mi"
    cpurequested: "200m"
    memorylimit: "100Mi"
    cpulimit: "200Mi"
    extraDashboardsConfigmaps: []
    # - name: example-dashboard-configmap
    #   dashboardFile: Example-dashboard.json
  ksm:
    image:
      registry: quay.io/
      name: coreos/kube-state-metrics
      tag: v1.9.8
    memoryrequested: "50Mi"
    cpurequested: "100m"
    memorylimit: "50Mi"
    cpulimit: "100m"

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
  - name:
    tamenabled: true
